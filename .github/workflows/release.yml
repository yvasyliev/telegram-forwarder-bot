name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and Test with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh_key: ${{ secrets.SSH_KEY }}
          ssh_host: ${{ secrets.SSH_HOST }}

      - name: Deploy to remote server and create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INIT_SCRIPT: |
            allprojects {
              task printBootJarName {
                doLast {
                  println bootJar.archiveFileName.get()
                }
              }
            
              task printVersion {
                doLast {
                  println project.version
                }
              }
            }
        run: |
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm ${{ secrets.SSH_WORKING_DIR }}/telegram-forwarder-bot-latest.jar || true"
          echo "$INIT_SCRIPT" > ~/.gradle/init.gradle
          BOOT_JAR_NAME=$(./gradlew --quiet printBootJarName)
          scp build/libs/$BOOT_JAR_NAME ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_WORKING_DIR }}
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ln --symbolic ${{ secrets.SSH_WORKING_DIR }}/$BOOT_JAR_NAME ${{ secrets.SSH_WORKING_DIR }}/telegram-forwarder-bot-latest.jar"
          VERSION=$(./gradlew --quiet printVersion)
          gh release create "v$VERSION" "build/libs/$BOOT_JAR_NAME" --title "v$VERSION" --generate-notes

  restart-service:
    needs: release
    uses: ./.github/workflows/manage-service.yml
    secrets: inherit
