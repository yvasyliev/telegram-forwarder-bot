name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Deploy to remote server
        env:
          PRINT_BOOT_JAR_NAME: |
            allprojects {
              task printBootJarName {
                doLast {
                  println bootJar.archiveFileName.get()
                }
              }
            }
        run: |
          chmod +x ./gradlew
          ./gradlew test bootJar
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm ${{ secrets.SSH_WORKING_DIR }}/telegram-forwarder-bot-latest.jar"
          echo "$PRINT_BOOT_JAR_NAME" > print-bootjar.gradle
          BOOT_JAR_NAME=$(./gradlew -I print-bootjar.gradle -q printBootJarName)
          scp build/libs/$BOOT_JAR_NAME ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_WORKING_DIR }}
          ssh -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ln -s ${{ secrets.SSH_WORKING_DIR }}/$BOOT_JAR_NAME ${{ secrets.SSH_WORKING_DIR }}/telegram-forwarder-bot-latest.jar"

  stop-service:
    needs: release
    uses: ./.github/workflows/manage-service.yml
    with:
      action: stop
    secrets: inherit

  start-service:
    needs: stop-service
    uses: ./.github/workflows/manage-service.yml
    with:
      action: start
    secrets: inherit