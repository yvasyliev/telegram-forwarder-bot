plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'org.sonarqube' version '6.2.0.5505'
    id 'checkstyle'
}

group = 'io.github.yvasyliev.telegramforwarderbot'
version = '4.0-alpha.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    mockitoAgent
}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.bundles.telegrambots
    implementation 'org.apache.commons:commons-collections4:4.5.0'
    implementation 'org.hibernate.orm:hibernate-community-dialects'
    implementation 'org.jsoup:jsoup:1.21.1'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    mockitoAgent('org.mockito:mockito-core') {
        transitive = false
    }
    checkstyle 'com.puppycrawl.tools:checkstyle:10.25.0'
    checkstyle 'com.github.sevntu-checkstyle:sevntu-checks:1.44.1'
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    sourceSets = [project.sourceSets.main]
}

test {
    useJUnitPlatform()
    jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: [
                'io/github/yvasyliev/telegramforwarderbot/configuration/**',
                'io/github/yvasyliev/telegramforwarderbot/dto/**',
                'io/github/yvasyliev/telegramforwarderbot/entity/**',
                'io/github/yvasyliev/telegramforwarderbot/reddit/dto/**',
                'io/github/yvasyliev/telegramforwarderbot/reddit/entity/**',
                'io/github/yvasyliev/telegramforwarderbot/util/Pointcuts.class',
                'io/github/yvasyliev/telegramforwarderbot/TelegramForwarderBotApplication.class'
        ])
    }))
}

processResources {
    filesMatching('application.yml') {
        expand project.properties
    }
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor',
    ]
}

sonar {
    properties {
        property "sonar.projectKey", "yvasyliev_reddit-telegram-forwarder"
        property "sonar.organization", "yvasyliev"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sources", "src/main/resources/templates"
    }
}
